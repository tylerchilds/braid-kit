{
 "users/passwords": {
  "key": "users/passwords",
  "val": {}
 },
 "edge/sillyz-spec.js": {
  "key": "edge/sillyz-spec.js",
  "val": {
   "file": "export const handler = (req, res) => {\n  return res.send(`\n    <!DOCTYPE html>\n    <html lang=\"en\">\n      <head>\n        <meta charset=\"utf-8\">\n        <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge,chrome=1\">\n        <title>The Silly Specification</title>\n\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n\n        <link href=\"/styles/system.css\" rel=\"stylesheet\">\n      </head>\n      <body>\n\t\t\t\t<article class=\"single-column\" style=\"padding-bottom: 25vh;\">\n\t\t\t\t\t<nav>\n\t\t\t\t\t\t<a href=\"/\">Go Home</a>\n\t\t\t\t\t</nav>\n\t\t\t\t\t<header>\n\t\t\t\t\t\t<h1>\n\t\t\t\t\t\t\t# SILLYZ-SPEC-1\n\t\t\t\t\t\t</h1>\n\t\t\t\t\t</header>\n\t\t\t\t\t<main id=\"main\" class=\"full-bleed single-column\">\n\t\t\t\t\t\t<h2>\n\t\t\t\t\t\t\t## Abstract\n\t\t\t\t\t\t</h2>\n\n\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\tNature often repeats. Color, waves of light. Music, waves of sound. Categorically, we can organize both.\t\n\t\t\t\t\t\t</p>\n\n\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\tCode repeats in a similar way. Waves of patterns. When immersed in code, these patterns can be felt in the mind.\n\t\t\t\t\t\t</p>\n\n\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\tA painter trains the eye with color. A musician trains the ear with notes. A coder trains the mind with relationships.\n\t\t\t\t\t\t</p>\n\n\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\tSuccessful coders simply study and practice. However, the world of code is vast and spans generations. Where should one begin to study and where can one practice?\n\t\t\t\t\t\t</p>\n\n\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\tThe Silly Specification delivers the minimum viable ecosystem for aspiring coders that want real power and not the nerfed alternatives.\n\t\t\t\t\t\t</p>\n\n\t\t\t\t\t\t<h2>\n\t\t\t\t\t\t\t## Introduction\n\t\t\t\t\t\t</h2>\n\n\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\tAssume a Tree exists that grows fruits, or Nodes, of many kinds. Specifically, you can see apples, oranges, and bananas. You might be able to identify more fruit with a **Module**, let's build one!\n\t\t\t\t\t\t</p>\n\n\t\t\t\t\t\t<h2>\n\t\t\t\t\t\t\t## Module\n\t\t\t\t\t\t</h2>\n\n\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\tlet _Module_ be a Function with two Parameters, Selector and State.\n\t\t\t\t\t\t\t<br/>\n\t\t\t\t\t\t\tlet Selector be a required String used to match Nodes.\n\t\t\t\t\t\t\t<br/>\n\t\t\t\t\t\t\tlet State be optional, yet always JSON to serve as a default Structure.\n\t\t\t\t\t\t</p>\n\n\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\tCalling _Module_ will Return an Object with Module Selector as a property named \"selector\" and five Methods.\n\t\t\t\t\t\t</p>\n\n\t\t\t\t\t\t<h3>\n\t\t\t\t\t\t\t1. Render\n\t\t\t\t\t\t</h3>\n\n\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\tlet _Render_ be a Function with one Parameter, Compositor.\n\t\t\t\t\t\t\t<br/>\n\t\t\t\t\t\t\tlet Compositor be a Function with one Parameter, Target.\n\t\t\t\t\t\t\t<br/>\n\t\t\t\t\t\t\tlet Target be a Node.\n\t\t\t\t\t\t</p>\n\n\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\tCalling _Render_ will subscribe the Compositor to State updates. Any Nodes matching the Selector will be notified immediately.\n\t\t\t\t\t\t</p>\n\n\t\t\t\t\t\t<div class=\"full-bleed\">\n\thi\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t<h3>\n\t\t\t\t\t\t\t2. Style\n\t\t\t\t\t\t</h3>\n\n\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\tlet _Style_ be a Function with one Parameter, Rules.  \n\t\t\t\t\t\t\tlet Rules be a String with one special character.\n\t\t\t\t\t\t</p>\n\n\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\tCalling _Style_ will register Rules with the Tree to apply Layout, Paint, and Composite effects.\n\t\t\t\t\t\t</p>\n\n\t\t\t\t\t\t<h3>\n\t\t\t\t\t\t\t3. On\n\t\t\t\t\t\t</h3>\n\n\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\tlet _On_ be a Function with three Parameters, Event Type, Selector, and Macro.\n\t\t\t\t\t\t\t<br/>\n\t\t\t\t\t\t\tlet Event Type be a String of the Enumerated Event Types on a Node.\n\t\t\t\t\t\t\t<br/>\n\t\t\t\t\t\t\tlet Selector be a String used to match Children of the Compositor Target.\n\t\t\t\t\t\t\t<br/>\n\t\t\t\t\t\t\tlet Macro be a Function with one Parameter, Event.\n\t\t\t\t\t\t\t<br/>\n\t\t\t\t\t\t\tlet Event be an Object with the evented Node as a property named \"target\".\n\t\t\t\t\t\t</p>\n\n\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\tCalling _On_ will register the Macro with the Tree to be notified when Selected Children of the Compositor Target are evented.\n\t\t\t\t\t\t</p>\n\n\t\t\t\t\t\t<h3>\n\t\t\t\t\t\t\t4. Read\n\t\t\t\t\t\t</h3>\n\n\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\tlet _Read_ be a Function\n\t\t\t\t\t\t</p>\n\n\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\tCalling _Read_ will Return the current State.\n\t\t\t\t\t\t<p>\n\n\t\t\t\t\t\t<h3>\n\t\t\t\t\t\t\t5. Write\n\t\t\t\t\t\t</h3>\n\n\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\tlet _Write_ be a Function with two Parameters, Patch and Merge Handler\n\t\t\t\t\t\t\t<br/>\n\t\t\t\t\t\t\tlet Patch be a required JSON to be merged into state as is\n\t\t\t\t\t\t\t<br/>\n\t\t\t\t\t\t\tlet Merge Handler be an optional Function with two Parameters, State and Patch\n\t\t\t\t\t\t\t<br/>\n\t\t\t\t\t\t\tlet State be Module State\n\t\t\t\t\t\t\t<br/>\n\t\t\t\t\t\t\tlet Patch be Patch\n\t\t\t\t\t\t</p>\n\n\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\tCalling _Write_ will merge the current Patch into State. A custom Merge Handler may be used to manually apply the Patch by Returning the next full State.\n\t\t\t\t\t\t</p>\n\n\t\t\t\t\t\t<h2>\n\t\t\t\t\t\t\t## Conclusion\n\t\t\t\t\t\t</h2>\n\n\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\tHopefully by now you are either a human that speaks computer better or a computer that speaks human better!\n\t\t\t\t\t\t</p>\n\n\t\t\t\t\t\t<hr/>\n\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\t\"I've always known what types\n\t\t\t\t\t\t\t<em>\n\t\t\t\t\t\t\t\t_are_\n\t\t\t\t\t\t\t</em>\n\t\t\t\t\t\t\t, I've just never particularly liked their\n\t\t\t\t\t\t\t<strong>\n\t\t\t\t\t\t\t\t**rigorous enforcement**\n\t\t\t\t\t\t\t</strong>\n\t\t\t\t\t\t\t, whether letter graded, peer reviewed, machine learned, or god offended.\" - Tyler Childs\n\t\t\t\t\t\t</p>\n\t\t\t\t\t</main>\n\t\t\t\t\t<footer>\n\t\t\t\t\t\t<stay-in-touch></stay-in-touch>\n\t\t\t\t\t</footer>\n\t\t\t\t</article>\n         <code-module src=\"/edge/index.js\"></code-module>\n         <script src=\"/package.2015.js\"></script>      \n      </body>\n    </html>\n  `)\n}"
  }
 },
 "edge/index.js": {
  "key": "edge/index.js",
  "val": {
   "file": "export const handler = (req, res) => {\n  return res.send(`\n    <!DOCTYPE html>\n    <html lang=\"en\">\n      <head>\n        <meta charset=\"utf-8\">\n        <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge,chrome=1\">\n        <title>Homepage</title>\n\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n\n        <link href=\"/styles/system.css\" rel=\"stylesheet\">\n      </head>\n      <body>\n\t\t <h1>Hello World</h1>\n         <code-module src=\"/edge/index.js\"></code-module>\n         <script src=\"/package.2015.js\"></script>      \n      </body>\n    </html>\n  `)\n}"
  }
 },
 "design-system": {
  "key": "design-system",
  "val": {
   "palette": "\n    --wheel-0-0: rgb(4.6192% 7.6793% 0%);\n  \n    --wheel-0-1: rgb(11.668% 21.513% 0%);\n  \n    --wheel-0-2: rgb(20.026% 36.342% 0%);\n  \n    --wheel-0-3: rgb(30.029% 52.199% 0%);\n  \n    --wheel-0-4: rgb(40.639% 68.988% 0%);\n  \n    --wheel-0-5: rgb(51.767% 86.573% 0%);\n  \n    --wheel-0-6: rgb(68.27% 100% 8.4038%);\n  \n    --wheel-1-0: rgb(0% 8.9604% 0%);\n  \n    --wheel-1-1: rgb(0% 22.837% 8.1914%);\n  \n    --wheel-1-2: rgb(0% 38.174% 16.179%);\n  \n    --wheel-1-3: rgb(0% 54.668% 24.894%);\n  \n    --wheel-1-4: rgb(0% 72.15% 34.05%);\n  \n    --wheel-1-5: rgb(0% 90.46% 43.66%);\n  \n    --wheel-1-6: rgb(61.83% 100% 74.298%);\n  \n    --wheel-2-0: rgb(0% 8.5926% 6.438%);\n  \n    --wheel-2-1: rgb(0% 22.329% 18.661%);\n  \n    --wheel-2-2: rgb(0% 37.433% 31.85%);\n  \n    --wheel-2-3: rgb(0% 53.658% 46.062%);\n  \n    --wheel-2-4: rgb(0% 70.849% 61.111%);\n  \n    --wheel-2-5: rgb(0% 88.854% 76.877%);\n  \n    --wheel-2-6: rgb(59.837% 100% 93.734%);\n  \n    --wheel-3-0: rgb(0% 8.3497% 9.3092%);\n  \n    --wheel-3-1: rgb(0% 21.823% 24.693%);\n  \n    --wheel-3-2: rgb(0% 36.674% 41.031%);\n  \n    --wheel-3-3: rgb(0% 52.636% 58.541%);\n  \n    --wheel-3-4: rgb(0% 69.541% 77.089%);\n  \n    --wheel-3-5: rgb(0% 87.244% 96.505%);\n  \n    --wheel-3-6: rgb(74.739% 98.786% 100%);\n  \n    --wheel-4-0: rgb(0% 8.0121% 12.217%);\n  \n    --wheel-4-1: rgb(0% 21.189% 30.537%);\n  \n    --wheel-4-2: rgb(0% 35.692% 49.876%);\n  \n    --wheel-4-3: rgb(0% 51.284% 70.525%);\n  \n    --wheel-4-4: rgb(0% 67.803% 92.437%);\n  \n    --wheel-4-5: rgb(42.18% 82.876% 100%);\n  \n    --wheel-4-6: rgb(86.502% 95.953% 100%);\n  \n    --wheel-5-0: rgb(0% 7.0569% 17.933%);\n  \n    --wheel-5-1: rgb(0% 19.75% 39.946%);\n  \n    --wheel-5-2: rgb(0% 33.482% 63.926%);\n  \n    --wheel-5-3: rgb(0% 48.269% 89.635%);\n  \n    --wheel-5-4: rgb(25.409% 63.433% 100%);\n  \n    --wheel-5-5: rgb(63.438% 78.632% 100%);\n  \n    --wheel-5-6: rgb(91.474% 94.538% 100%);\n  \n    --wheel-6-0: rgb(8.0676% 3.3149% 20.362%);\n  \n    --wheel-6-1: rgb(20.617% 14.503% 41.794%);\n  \n    --wheel-6-2: rgb(35.087% 25.901% 65.459%);\n  \n    --wheel-6-3: rgb(50.657% 38.199% 90.84%);\n  \n    --wheel-6-4: rgb(67.507% 53.901% 100%);\n  \n    --wheel-6-5: rgb(82.742% 73.346% 100%);\n  \n    --wheel-6-6: rgb(96.197% 93.051% 100%);\n  \n    --wheel-7-0: rgb(16.202% 0% 14.766%);\n  \n    --wheel-7-1: rgb(34.575% 5.1914% 32.252%);\n  \n    --wheel-7-2: rgb(55.161% 13.775% 51.628%);\n  \n    --wheel-7-3: rgb(77.262% 22.858% 72.437%);\n  \n    --wheel-7-4: rgb(100% 32.449% 94.429%);\n  \n    --wheel-7-5: rgb(100% 64.101% 98.597%);\n  \n    --wheel-7-6: rgb(100% 91.07% 100%);\n  \n    --wheel-8-0: rgb(18.743% 0% 7.0869%);\n  \n    --wheel-8-1: rgb(40.087% 0% 19.73%);\n  \n    --wheel-8-2: rgb(63.259% 0% 33.406%);\n  \n    --wheel-8-3: rgb(88.12% 8.0492% 48.136%);\n  \n    --wheel-8-4: rgb(100% 35.66% 63.251%);\n  \n    --wheel-8-5: rgb(100% 66.628% 78.515%);\n  \n    --wheel-8-6: rgb(100% 91.673% 94.539%);\n  \n    --wheel-9-0: rgb(16.391% 1.0015% 0%);\n  \n    --wheel-9-1: rgb(38.926% 2.8895% 7.137%);\n  \n    --wheel-9-2: rgb(61.648% 11.164% 15.112%);\n  \n    --wheel-9-3: rgb(86.036% 19.742% 23.714%);\n  \n    --wheel-9-4: rgb(100% 38.269% 37.593%);\n  \n    --wheel-9-5: rgb(100% 67.774% 64.063%);\n  \n    --wheel-9-6: rgb(100% 92.035% 90.708%);\n  \n    --wheel-10-0: rgb(11.524% 5.0406% 0%);\n  \n    --wheel-10-1: rgb(31.187% 13.977% 0%);\n  \n    --wheel-10-2: rgb(51.999% 23.885% 0%);\n  \n    --wheel-10-3: rgb(73.591% 35.256% 0%);\n  \n    --wheel-10-4: rgb(96.295% 47.419% 0%);\n  \n    --wheel-10-5: rgb(100% 69.548% 42.687%);\n  \n    --wheel-10-6: rgb(100% 92.505% 85.933%);\n  \n    --wheel-11-0: rgb(8.7217% 6.439% 0%);\n  \n    --wheel-11-1: rgb(22.537% 18.664% 0%);\n  \n    --wheel-11-2: rgb(37.553% 31.871% 0%);\n  \n    --wheel-11-3: rgb(53.895% 46.085% 0%);\n  \n    --wheel-11-4: rgb(71.202% 61.136% 0%);\n  \n    --wheel-11-5: rgb(89.332% 76.904% 0%);\n  \n    --wheel-11-6: rgb(100% 93.739% 61.831%);\n  "
  }
 }
}