{
 "users/passwords": {
  "key": "users/passwords",
  "val": {
   "hello": {
    "user": "@hello",
    "pass": "$2a$10$k7hfbnfiVZX8kMTlSU3M6esUlJoJ0Lijt0WBPp2Wa3vCmGGZZcnrS"
   },
   "hello2": {
    "user": "@hello2",
    "pass": "$2a$10$HJRAgw5J5Eu/kw47EO42eeMI2VgvuVdTFKxn3Nd31rHkum9mKO3EO"
   }
  }
 },
 "edge/sillyz-spec.js": {
  "key": "edge/sillyz-spec.js",
  "val": {
   "file": "export const handler = (req, res) => {\n  return res.send(`\n    <!DOCTYPE html>\n    <html lang=\"en\">\n      <head>\n        <meta charset=\"utf-8\">\n        <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge,chrome=1\">\n        <title>Web Modules</title>\n\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n\n        <link href=\"/styles/system.css\" rel=\"stylesheet\">\n      </head>\n      <body>\n\t\t\t\t<article class=\"single-column\" style=\"padding-bottom: 25vh;\">\n\t\t\t\t\t<nav>\n\t\t\t\t\t\t<a href=\"/\">Go Home</a>\n\t\t\t\t\t</nav>\n\t\t\t\t\t<header>\n\t\t\t\t\t\t<h1>\n\t\t\t\t\t\t\t# Web Modules\n\t\t\t\t\t\t</h1>\n\t\t\t\t\t</header>\n\t\t\t\t\t<main id=\"main\" class=\"full-bleed single-column\">\n\t\t\t\t\t\t<h2>\n\t\t\t\t\t\t\t## Abstract\n\t\t\t\t\t\t</h2>\n\n\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\tNature often repeats. Color, waves of light. Music, waves of sound. Categorically, we can organize both.\t\n\t\t\t\t\t\t</p>\n\n\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\tCode repeats in a similar way. Waves of patterns. When immersed in code, these patterns can be felt in the mind.\n\t\t\t\t\t\t</p>\n\n\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\tA painter trains the eye with color. A musician trains the ear with notes. A coder trains the mind with relationships.\n\t\t\t\t\t\t</p>\n\n\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\tSuccessful coders simply study and practice. However, the world of code is vast and spans generations. Where should one begin to study and where can one practice?\n\t\t\t\t\t\t</p>\n\n\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\tWeb Modules delivers the minimum viable ecosystem for aspiring coders that want real power and not the nerfed alternatives.\n\t\t\t\t\t\t</p>\n\n\t\t\t\t\t\t<h2>\n\t\t\t\t\t\t\t## Introduction\n\t\t\t\t\t\t</h2>\n\n\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\tAssume a Tree exists that grows fruits, or Nodes, of many kinds. Specifically, you can see apples, oranges, and bananas. You might be able to identify more fruit with a **Module**, let's build one!\n\t\t\t\t\t\t</p>\n\n\t\t\t\t\t\t<h2>\n\t\t\t\t\t\t\t## Module\n\t\t\t\t\t\t</h2>\n\n\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\tlet _Module_ be a Function with two Parameters, Selector and State.\n\t\t\t\t\t\t\t<br/>\n\t\t\t\t\t\t\tlet Selector be a required String used to match Nodes.\n\t\t\t\t\t\t\t<br/>\n\t\t\t\t\t\t\tlet State be optional, yet always JSON to serve as a default Structure.\n\t\t\t\t\t\t</p>\n\n\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\tCalling _Module_ will Return an Object with Module Selector as a property named \"selector\" and five Methods.\n\t\t\t\t\t\t</p>\n\n\t\t\t\t\t\t<h3>\n\t\t\t\t\t\t\t1. Render\n\t\t\t\t\t\t</h3>\n\n\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\tlet _Render_ be a Function with one Parameter, Compositor.\n\t\t\t\t\t\t\t<br/>\n\t\t\t\t\t\t\tlet Compositor be a Function with one Parameter, Target.\n\t\t\t\t\t\t\t<br/>\n\t\t\t\t\t\t\tlet Target be a Node.\n\t\t\t\t\t\t</p>\n\n\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\tCalling _Render_ will subscribe the Compositor to State updates. Any Nodes matching the Selector will be notified immediately.\n\t\t\t\t\t\t</p>\n\n\n\t\t\t\t\t\t<h3>\n\t\t\t\t\t\t\t2. Style\n\t\t\t\t\t\t</h3>\n\n\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\tlet _Style_ be a Function with one Parameter, Rules.  \n\t\t\t\t\t\t\tlet Rules be a String with one special character.\n\t\t\t\t\t\t</p>\n\n\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\tCalling _Style_ will register Rules with the Tree to apply Layout, Paint, and Composite effects.\n\t\t\t\t\t\t</p>\n\n\t\t\t\t\t\t<h3>\n\t\t\t\t\t\t\t3. On\n\t\t\t\t\t\t</h3>\n\n\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\tlet _On_ be a Function with three Parameters, Event Type, Selector, and Macro.\n\t\t\t\t\t\t\t<br/>\n\t\t\t\t\t\t\tlet Event Type be a String of the Enumerated Event Types on a Node.\n\t\t\t\t\t\t\t<br/>\n\t\t\t\t\t\t\tlet Selector be a String used to match Children of the Compositor Target.\n\t\t\t\t\t\t\t<br/>\n\t\t\t\t\t\t\tlet Macro be a Function with one Parameter, Event.\n\t\t\t\t\t\t\t<br/>\n\t\t\t\t\t\t\tlet Event be an Object with the evented Node as a property named \"target\".\n\t\t\t\t\t\t</p>\n\n\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\tCalling _On_ will register the Macro with the Tree to be notified when Selected Children of the Compositor Target are evented.\n\t\t\t\t\t\t</p>\n\n\t\t\t\t\t\t<h3>\n\t\t\t\t\t\t\t4. Read\n\t\t\t\t\t\t</h3>\n\n\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\tlet _Read_ be a Function\n\t\t\t\t\t\t</p>\n\n\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\tCalling _Read_ will Return the current State.\n\t\t\t\t\t\t<p>\n\n\t\t\t\t\t\t<h3>\n\t\t\t\t\t\t\t5. Write\n\t\t\t\t\t\t</h3>\n\n\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\tlet _Write_ be a Function with two Parameters, Patch and Merge Handler\n\t\t\t\t\t\t\t<br/>\n\t\t\t\t\t\t\tlet Patch be a required JSON to be merged into state as is\n\t\t\t\t\t\t\t<br/>\n\t\t\t\t\t\t\tlet Merge Handler be an optional Function with two Parameters, State and Patch\n\t\t\t\t\t\t\t<br/>\n\t\t\t\t\t\t\tlet State be Module State\n\t\t\t\t\t\t\t<br/>\n\t\t\t\t\t\t\tlet Patch be Patch\n\t\t\t\t\t\t</p>\n\n\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\tCalling _Write_ will merge the current Patch into State. A custom Merge Handler may be used to manually apply the Patch by Returning the next full State.\n\t\t\t\t\t\t</p>\n\n\t\t\t\t\t\t<h2>\n\t\t\t\t\t\t\t## Conclusion\n\t\t\t\t\t\t</h2>\n\n\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\tHopefully by now you are either a human that speaks computer better or a computer that speaks human better!\n\t\t\t\t\t\t</p>\n\t\t\t\t\t</main>\n\t\t\t\t\t<footer>\n\t\t\t\t\t\t<stay-in-touch></stay-in-touch>\n\t\t\t\t\t</footer>\n\t\t\t\t</article>\n         <code-module src=\"/edge/sillyz-spec.js\"></code-module>\n         <script src=\"/package.2015.js\"></script>      \n      </body>\n    </html>\n  `)\n}"
  }
 },
 "edge/index.js": {
  "key": "edge/index.js",
  "val": {
   "file": "export const handler = (req, res) => {\n  return res.send(`\n    <!DOCTYPE html>\n    <html lang=\"en\">\n      <head>\n        <meta charset=\"utf-8\">\n        <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge,chrome=1\">\n        <title>Homepage</title>\n\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n\n        <link href=\"/styles/system.css\" rel=\"stylesheet\">\n      </head>\n      <body>\n\t\t <h1>Hello World</h1>\n         <code-module src=\"/edge/index.js\"></code-module>\n         <script src=\"/package.2015.js\"></script>      \n      </body>\n    </html>\n  `)\n}"
  }
 },
 "design-system": {
  "key": "design-system",
  "val": {
   "palette": "\n    --wheel-0-0: lch(5 30 120);\n  \n    --wheel-0-1: lch(20 45 120);\n  \n    --wheel-0-2: lch(35 60 120);\n  \n    --wheel-0-3: lch(50 75 120);\n  \n    --wheel-0-4: lch(65 90 120);\n  \n    --wheel-0-5: lch(80 105 120);\n  \n    --wheel-0-6: lch(95 120 120);\n  \n    --wheel-1-0: lch(5 30 150);\n  \n    --wheel-1-1: lch(20 45 150);\n  \n    --wheel-1-2: lch(35 60 150);\n  \n    --wheel-1-3: lch(50 75 150);\n  \n    --wheel-1-4: lch(65 90 150);\n  \n    --wheel-1-5: lch(80 105 150);\n  \n    --wheel-1-6: lch(95 120 150);\n  \n    --wheel-2-0: lch(5 30 180);\n  \n    --wheel-2-1: lch(20 45 180);\n  \n    --wheel-2-2: lch(35 60 180);\n  \n    --wheel-2-3: lch(50 75 180);\n  \n    --wheel-2-4: lch(65 90 180);\n  \n    --wheel-2-5: lch(80 105 180);\n  \n    --wheel-2-6: lch(95 120 180);\n  \n    --wheel-3-0: lch(5 30 210);\n  \n    --wheel-3-1: lch(20 45 210);\n  \n    --wheel-3-2: lch(35 60 210);\n  \n    --wheel-3-3: lch(50 75 210);\n  \n    --wheel-3-4: lch(65 90 210);\n  \n    --wheel-3-5: lch(80 105 210);\n  \n    --wheel-3-6: lch(95 120 210);\n  \n    --wheel-4-0: lch(5 30 240);\n  \n    --wheel-4-1: lch(20 45 240);\n  \n    --wheel-4-2: lch(35 60 240);\n  \n    --wheel-4-3: lch(50 75 240);\n  \n    --wheel-4-4: lch(65 90 240);\n  \n    --wheel-4-5: lch(80 105 240);\n  \n    --wheel-4-6: lch(95 120 240);\n  \n    --wheel-5-0: lch(5 30 270);\n  \n    --wheel-5-1: lch(20 45 270);\n  \n    --wheel-5-2: lch(35 60 270);\n  \n    --wheel-5-3: lch(50 75 270);\n  \n    --wheel-5-4: lch(65 90 270);\n  \n    --wheel-5-5: lch(80 105 270);\n  \n    --wheel-5-6: lch(95 120 270);\n  \n    --wheel-6-0: lch(5 30 300);\n  \n    --wheel-6-1: lch(20 45 300);\n  \n    --wheel-6-2: lch(35 60 300);\n  \n    --wheel-6-3: lch(50 75 300);\n  \n    --wheel-6-4: lch(65 90 300);\n  \n    --wheel-6-5: lch(80 105 300);\n  \n    --wheel-6-6: lch(95 120 300);\n  \n    --wheel-7-0: lch(5 30 330);\n  \n    --wheel-7-1: lch(20 45 330);\n  \n    --wheel-7-2: lch(35 60 330);\n  \n    --wheel-7-3: lch(50 75 330);\n  \n    --wheel-7-4: lch(65 90 330);\n  \n    --wheel-7-5: lch(80 105 330);\n  \n    --wheel-7-6: lch(95 120 330);\n  \n    --wheel-8-0: lch(5 30 360);\n  \n    --wheel-8-1: lch(20 45 360);\n  \n    --wheel-8-2: lch(35 60 360);\n  \n    --wheel-8-3: lch(50 75 360);\n  \n    --wheel-8-4: lch(65 90 360);\n  \n    --wheel-8-5: lch(80 105 360);\n  \n    --wheel-8-6: lch(95 120 360);\n  \n    --wheel-9-0: lch(5 30 390);\n  \n    --wheel-9-1: lch(20 45 390);\n  \n    --wheel-9-2: lch(35 60 390);\n  \n    --wheel-9-3: lch(50 75 390);\n  \n    --wheel-9-4: lch(65 90 390);\n  \n    --wheel-9-5: lch(80 105 390);\n  \n    --wheel-9-6: lch(95 120 390);\n  \n    --wheel-10-0: lch(5 30 420);\n  \n    --wheel-10-1: lch(20 45 420);\n  \n    --wheel-10-2: lch(35 60 420);\n  \n    --wheel-10-3: lch(50 75 420);\n  \n    --wheel-10-4: lch(65 90 420);\n  \n    --wheel-10-5: lch(80 105 420);\n  \n    --wheel-10-6: lch(95 120 420);\n  \n    --wheel-11-0: lch(5 30 450);\n  \n    --wheel-11-1: lch(20 45 450);\n  \n    --wheel-11-2: lch(35 60 450);\n  \n    --wheel-11-3: lch(50 75 450);\n  \n    --wheel-11-4: lch(65 90 450);\n  \n    --wheel-11-5: lch(80 105 450);\n  \n    --wheel-11-6: lch(95 120 450);\n  "
  }
 },
 "messages": {
  "key": "messages",
  "val": [
   {
    "from": "Braid User",
    "body": "hi"
   },
   {
    "from": "Ty",
    "body": "cool"
   },
   {
    "from": "Guy",
    "body": "That's what I thought"
   }
  ]
 },
 "@hello": {
  "key": "@hello",
  "val": {
   "name": "hello",
   "pass": "$2a$10$k7hfbnfiVZX8kMTlSU3M6esUlJoJ0Lijt0WBPp2Wa3vCmGGZZcnrS"
  }
 },
 "users": {
  "key": "users",
  "val": [
   {
    "link": "@hello"
   },
   {
    "link": "@hello2"
   }
  ]
 },
 "logged_in_clients": {
  "key": "logged_in_clients",
  "val": {
   "4usz3it5acpr0grzp1ngoynelzev95k": {
    "link": "@hello2"
   }
  }
 },
 "user/ty": {
  "key": "user/ty",
  "val": {
   "email": "aslln@elasn.com",
   "name": "hi"
  }
 },
 "undefined": {
  "key": "undefined"
 },
 "@hello2": {
  "key": "@hello2",
  "val": {
   "name": "hello2",
   "pass": "$2a$10$HJRAgw5J5Eu/kw47EO42eeMI2VgvuVdTFKxn3Nd31rHkum9mKO3EO",
   "some_key": "123"
  }
 },
 "profile": {
  "key": "profile",
  "val": {
   "username": "hi",
   "account": {
    "val": "hi"
   }
  }
 },
 "username": {
  "key": "username",
  "val": "tychi"
 },
 "hello": {
  "key": "hello",
  "val": "hi"
 },
 "ok/what": {
  "key": "ok/what",
  "val": {
   "ok": "ok"
  }
 }
}